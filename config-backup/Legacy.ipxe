#!ipxe
dhcp


set nfs-server          ${next-server}
set nfs-mountpt         /boot
set nfs-linux-live      nfs://${nfs-server}${nfs-mountpt}
set nfs-linux-boot      ${nfs-server}:${nfs-mountpt}

# Variables are specified in boot.ipxe.cfg

# Some menu defaults
set menu-timeout 500000
set submenu-timeout ${menu-timeout}
isset ${menu-default} || set menu-default exit
set esc:hex 1b
set bold ${esc:string}[1m
set orange ${esc:string}[33;0m
set yellow ${esc:string}[33;1m
set cyan ${esc:string}[36;1m
set resetfg ${esc:string}[39m
set resetbg ${esc:string}[49m
set resetbold ${esc:string}[22m
set reset ${esc:string}[0m


colour --rgb 0x00567a 1 ||
colour --rgb 0x00567a 2 ||
colour --rgb 0x00567a 4 ||
colour --rgb 0x00567a 0 ||
colour --rgb 0xff0000 0 ||
cpair --foreground 7 --background 2 2 ||
cpair --background 0 1 ||
cpair --background 1 2 ||
cpair --foreground 1 1 ||
cpair --foreground 0 3 ||
cpair --foreground 4 4 ||


# Set graphics mode and configure colours
console --x 800 --y 600 --picture http://${next-server}/riddick.png
colour --basic 3 --rgb 0xffaa44 3
cpair --foreground 0 --background 3 2
cpair --foreground 3 3
set chotkey ${bold}
set cname ${orange}


# Figure out if client is 64-bit capable
#cpuid --ext 29 && set arch x86_64 || set arch x86
#cpuid --ext 29 && set archb 64 || set archb 32
#cpuid --ext 29 && set archl x86_64 || set archl i386

cpuid --ext 29 && set arch x86_64 || set arch i386 echo ${platform} ${arch}

:start
#menu iPXE boot menu for ${manufacturer} ${product} (${archb}bit)	 on (${next-server})

menu iPXE boot menu for ${manufacturer} ${product} ${platform} on (${next-server})

item --gap --             ------------------------- Operating systems ------------------------------
item --key f freedos      Boot FreeDOS from iSCSI
item --key m msdos        Boot MS-DOS from iSCSI
item --key u ubuntu       Boot Ubuntu from iSCSI
item --key v vmware       Boot VMware ESXi from iSCSI
item --key w windows7     Boot Windows 7 from iSCSI

item --key w wds            WDS
item   prmo         Boot In to PxeBoot-server
item --key l menu-live    Live environments...
item --gap --             ------------------------- Tools and utilities ----------------------------
item --key p pxelinux     Load PXELinux menu
item --key r menu-recovery Recovery tools...


item --key d menu-diag    Diagnostics tools...
item --key i menu-install Installers...
item --gap --             ------------------------- Advanced options -------------------------------
item --key c config       Configure settings
item shell                Drop to iPXE shell
item reboot               Reboot computer
item poweroff             Power Off computer
item
item --key x exit         Exit iPXE and continue BIOS boot
choose --timeout ${menu-timeout} --default ${menu-default} selected || goto cancel
set menu-timeout 0
goto ${selected}

:cancel
echo You cancelled the menu, dropping you to a shell

:shell
echo Type 'exit' to get the back to the menu
shell
set menu-timeout 0
set submenu-timeout 0
goto start

:failed
echo Booting failed, dropping to shell
goto shell

:reboot
reboot

:poweroff
poweroff

:exit
exit

:config
config
goto start

:back
set submenu-timeout 0
clear submenu-default
goto start

############ MAIN MENU ITEMS ############


:wds
chain /Boot/pxeboot.0
|| goto failed

#PXEBOOT On OVH
:prmo
set 210:string tftp://192.168.2.58/
chain ${210:string}ipxe.efi
|| goto failed
 
:pxelinux
set 210:string tftp://${next-server}/bios/
chain ${210:string}pxelinux.0 || goto failed
goto start

###################### RECOVERY MENU ################################

:menu-recovery
menu Recovery tools

item
item --key 0x08 back Back to top menu...
iseq ${menu-default} menu-recovery && isset ${submenu-default} && goto menu-recovery-timed ||
choose selected && goto ${selected} || goto start
:menu-recovery-timed
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start



###################### DIAGNOSTICS MENU #############################

:menu-diag
menu Diagnostic tools

item --key 0x08 back Back to top menu...
iseq ${menu-default} menu-diag && isset ${submenu-default} && goto menu-diag-timed ||
choose selected && goto ${selected} || goto start
:menu-diag-timed
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start

############################ INSTALLER MENU #########################

:menu-install
menu Installers 

item popos20     Install Pop Os 20



item --key 0x08 back      Back to top menu...
iseq ${menu-default} menu-install && isset ${submenu-default} && goto menu-install-timed ||
choose selected && goto ${selected} || goto start
:menu-install-timed
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start

:popos20
set server_ip ${next-server}
set nfs_path /srv/nfs/popos20
kernel nfs://${server_ip}${nfs_path}/casper/vmlinuz.efi || read void
initrd nfs://${server_ip}${nfs_path}/casper/initrd.gz || read void
imgargs vmlinuz.efi initrd=initrd.lz root=/dev/nfs boot=casper netboot=nfs nfsroot=${server_ip}:${nfs_path} ip=dhcp hostname=pop-os username=pop-os noprompt  --- || read void
boot || read void


###################### LIVE ENVIRONMENT MENU ########################

:menu-live
menu Live environments 

item clonzilla     Clonezilla live (Default settings, VGA 800x600)
item clonzilla2     Clonezilla2
item :ubuntu1804_live     Clonezilla live (in boot folder)

item --key 0x08 back      Back to top menu...
iseq ${menu-default} menu-live && isset ${submenu-default} && goto menu-live-timed ||
choose selected && goto ${selected} || goto start
:menu-live-timed
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start


:ubuntu1804_live
set dist-root ${nfs-linux-live}/clonezilla-live-3.1.3-21
kernel nfs://${dist-root}/live/vmlinuz
initrd nfs://${dist-root}/live/initrd
imgargs vmlinuz initrd=initrd nfsroot=${nfs-linux-boot}/clonezilla-live-3.1.3-21 netboot=nfs boot=live username=user union=overlay config components noswap edd=on nomodeset ocs_live_run="ocs-live-general" ocs_live_batch=no ocs_repository="nfs4://${server_ip}/partimag/" net.ifnames=0 nosplash noprompt
boot


:clonzilla
set server_ip ${next-server}
set nfs_path /clonezilla
kernel nfs://${server_ip}${nfs_path}/vmlinuz || read void
initrd nfs://${server_ip}${nfs_path}/initrd || read void 
imgargs vmlinuz boot=live username=user union=overlay config components noswap edd=on nomodeset ocs_live_run="ocs-live-general" ocs_live_batch=no ocs_repository="nfs4://${server_ip}/partimag/" net.ifnames=0 nosplash noprompt fetch=nfs://${server_ip}${nfs_path}/filesystem.squashfs
boot || read void


:clonzilla2
set server_ip ${next-server}
set nfs_path /data/clonezilla
kernel http://${server_ip}${nfs_path}/vmlinuz || read void
initrd http://${server_ip}${nfs_path}/initrd || read void 
imgargs vmlinuz boot=live username=user union=overlay config components noswap edd=on nomodeset ocs_live_run="ocs-live-general" ocs_live_batch=no ocs_repository="nfs4://${server_ip}/partimag/" net.ifnames=0 nosplash noprompt fetch=http://${server_ip}${nfs_path}/filesystem.squashfs
boot || read void
